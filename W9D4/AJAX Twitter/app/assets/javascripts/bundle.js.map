{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA,SAAS;AACT;AACA;;AAEA,2B;;;;;;;;;;ACpBA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;;AAEA,8B;;;;;;UC/DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;ACrBA,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C,mBAAO,CAAC,oDAAiB;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,KAAK;AACL,CAAC,C","file":"bundle.js","sourcesContent":["const APIUtil = {\n    followUser: id => {\n      // ...\n      APIUtil.changeStatus(id, 'POST')\n    },\n  \n    unfollowUser: id => {\n      // ...\n      APIUtil.changeStatus(id, 'DELETE')\n    },\n\n    changeStatus: (id, method) => (\n        $.ajax({\n            url: `/users/${id}/follow`,\n            dataType: 'json',\n            method\n        })\n    )\n  };\n  \n  module.exports = APIUtil;","const APIUtil = require('./api_util')\n\nclass FollowToggle {\n    constructor(el) {\n        this.$el = $(el)\n        this.userId = this.$el.data('user-id');\n        this.followState = this.$el.data('initial-follow-state');\n\n        this.render();\n    }\n\n    render(){\n        //choose what the button html texts will be\n        if (this.followState === \"unfollowed\") {\n            this.$el.prop('disabled', false)\n            this.$el.html(\"Follow!\")\n        }\n        if (this.followState === \"followed\") {\n            this.$el.prop('disabled', false)\n            this.$el.html(\"Unfollow!\")\n        }\n        if (this.followState === \"following\") {\n\n        }\n        if (this.followState === \"unfollowing\") {\n\n        }\n    }\n\n    //AJAX\n    handleClick(event){\n        \n        event.preventDefault();\n        if (this.followState === \"Unfollowed\"){\n            this.followState = 'following'\n            APIUtil.followUser(this.userId)\n            // $.ajax({\n            //     url: '/users/:id/follow',  //need to actually give it the id\n            //     type: 'POST',\n            //     data: formData,\n            //     success() {\n            //         console.log('Following!');\n            //     }\n            // });\n            this.followState = 'followed'\n        }else{\n            this.followState = 'unfollowing'\n            APIUtil.unfollowUser(this.userId)\n            // $.ajax({\n            //     url: '/users/:id/follow', //need to actually give it the id\n            //     type: 'POST/DELETE',\n            //     data: formData,\n            //     success() {\n            //         console.log('Unfollowed!');\n            //     }\n            // });\n            this.followState = 'unfollowed'\n        }\n        this.render();\n        \n    }\n}\n\nmodule.exports = FollowToggle;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle');\n\nrequire('./follow_toggle');\n\n//The callback should call your constructor once for each button.follow - toggle element.\n\n//grab html elements, no jquery no js until everything is loaded;\n//ready state function\n//grab all buttons within followToggle class, iterating through all buttons;\n//changing them to followToggle objects, now they can call all methods in that class\n$(function() {\n    $('button.follow-toggle').each(function(index,button){\n        new FollowToggle(button); //turn all button into js objects\n    })\n})"],"sourceRoot":""}